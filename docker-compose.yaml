version: '3.8'

x-postgres-common:
  &postgres-common
  image: postgres:16.3
  user: postgres
  restart: always
  healthcheck:
    test: 'pg_isready -U user --dbname=postgres'
    interval: 10s
    timeout: 5s
    retries: 5      

services:
  write_database:
    <<: *postgres-common        
    ports:
      - "5433:5432"
    environment:
      POSTGRES_HOST_AUTH_METHOD: "scram-sha-256\nhost replication all 0.0.0.0/0 md5"
      POSTGRES_INITDB_ARGS: "--auth-host=scram-sha-256"
      POSTGRES_PASSWORD: "motoca"
    command: |
      postgres 
      -c wal_level=replica 
      -c hot_standby=on 
      -c max_wal_senders=10 
      -c max_replication_slots=10 
      -c hot_standby_feedback=on
    volumes:
      - ./00_init.sql:/docker-entrypoint-initdb.d/00_init.sql

  read_database:
    <<: *postgres-common
    ports:
      - "5434:5432"
    environment:
      PGUSER: replicator
      PGPASSWORD: replicator_motoca
    command: |
      bash -c "
      rm -r /var/lib/postgresql/data/*      
      until pg_basebackup --pgdata=/var/lib/postgresql/data -R --slot=replication_slot --host=write_database --port=5432
      do
      echo 'Waiting for write_database to connect...'
      sleep 1s
      done
      echo 'Backup done, starting replica...'      
      chmod 0700 /var/lib/postgresql/data
      postgres
      "
    depends_on:
      - write_database
  
  rabbitmq:
    image: rabbitmq:3.9.29-management
    ports:
      - "5672:5672"
      - "15672:15672"
    restart: always
    environment:
      RABBITMQ_DEFAULT_USER: motoca
      RABBITMQ_DEFAULT_PASS: grau
      
  queue_initializer:    
    build:
      context: .
      dockerfile: queue_initializer.dockerfile      
    environment:
      RABBITMQ_CORE: "Hostname=rabbitmq;VirtualHost=/;UserName=motoca;Password=grau;ClientProvidedName=platform"     
    depends_on:
      - rabbitmq
    restart: "on-failure"
  
  migrator:
    build:
      context: .
      dockerfile: motoca_migrator.dockerfile
    environment:
      POSTGRES_CORE_WRITE_DATABASE: "Host=write_database;Port=5432;Database=core;Username=postgres;Password=motoca"
      POSTGRES_PLATFORM_WRITE_DATABASE: "Host=write_database;Port=5432;Database=platform;Username=postgres;Password=motoca"
    depends_on:
      - write_database
    restart: "on-failure"

  motoca_consumer:
    build:
      context: .
      dockerfile: motoca_consumer.dockerfile
    environment:
      RABBITMQ_CORE: "Hostname=rabbitmq;VirtualHost=/;UserName=motoca;Password=grau;ClientProvidedName=platform"
      POSTGRES_PLATFORM_WRITE_DATABASE: "Host=write_database;Port=5432;Database=platform;Username=postgres;Password=motoca"
      POSTGRES_PLATFORM_READ_DATABASE: "Host=read_database;Port=5432;Database=platform;Username=postgres;Password=motoca"
    restart: "on-failure"
    depends_on:
      - queue_initializer
      - migrator
        
  core_api:
    build:
      context: .
      dockerfile: motoca_core_api.dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: "Development"
      POSTGRES_CORE_WRITE_DATABASE: "Host=write_database;Port=5432;Database=core;Username=postgres;Password=motoca"
      POSTGRES_CORE_READ_DATABASE: "Host=read_database;Port=5432;Database=core;Username=postgres;Password=motoca"
      JWT_SECRET: "HeFresos@ivlwiqu!#thEt=2ru#0vlno"
      STORAGE_VIRTUAL_PATH: "/assets"
      STORAGE_PHYSICAL_PATH: "/storage"
    depends_on:
      - rabbitmq
      - migrator
    restart: "on-failure"
    volumes:
      - motoca_storage:/storage
    ports:
      - "5167:8080"

  platform_api:
    build:
      context: .
      dockerfile: motoca_platform_api.dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: "Development"
      POSTGRES_CORE_WRITE_DATABASE: "Host=write_database;Port=5432;Database=core;Username=postgres;Password=motoca"
      POSTGRES_CORE_READ_DATABASE: "Host=read_database;Port=5432;Database=core;Username=postgres;Password=motoca"
      POSTGRES_PLATFORM_WRITE_DATABASE: "Host=write_database;Port=5432;Database=platform;Username=postgres;Password=motoca"
      POSTGRES_PLATFORM_READ_DATABASE: "Host=read_database;Port=5432;Database=platform;Username=postgres;Password=motoca"
      JWT_SECRET: "HeFresos@ivlwiqu!#thEt=2ru#0vlno"
      STORAGE_VIRTUAL_PATH: "/assets"
      STORAGE_PHYSICAL_PATH: "/storage"
      RABBITMQ_CORE: "Hostname=rabbitmq;VirtualHost=/;UserName=motoca;Password=grau;ClientProvidedName=platform"
    volumes:
      - motoca_storage:/storage
    depends_on:
      - rabbitmq
      - migrator
    restart: "on-failure"
    ports:
      - "5192:8080"

volumes:
  motoca_storage:
      